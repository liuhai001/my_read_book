1、后台开发涉及的范围

简单地说，后台开发涉及的层面主要包括网络、数据、业务逻辑、运维4个方面，如果扩展和延伸的话：

网络-分布式系统-并行计算

业务逻辑-WEB-游戏-交易-搜索

数据-CACHE-DB-KeyValue-文件存储服务

运维-负载均衡-容错-容灾-运维工具

2、后台开发的特点
A、后台开发相对稳定，不想用户界面一样，变化快。由于后台开发基本不涉及表现层，主要处理的是网络、数据和消息等。受“流行”和“时尚”的冲击比较小。无论是windows也好，MAC也好，IOS、Android，对后台架构的影响都不大。开发语言也比较稳定，主流的就是C/C++。
B、后台服务稳定性是首要保证！先抗住，再优化。
C、突发事件的冲击，巅峰时刻

3、后台开发需要长期积累
C/C++的开发和调试，脚本语言的学习，linux操作系统的熟悉，简单DB的操作与分析、补充硬件相关知识等。工作的重点也主要是数据统计、运维脚本的编写、小功能小需求的开发。一切顺利的话，基本能承担一个独立模块的开发，两年已经过去了。

大概做个一年的独立模块开发，经历过基本架构设计、和策划讨价还价、上线的不稳定、用户访问突然增长、服务器宕机、配置文件错误等的磨练后，终于对在线系统的开发有了比较深的认识。这时候，大概可以升级到公司的T2.3-T3.1。经过最少3年的努力，后台开发可以入门了。后期就需要通过时间和项目进行逐步的积累。

服务器的经验累积，包括想法，架构和代码设计都需要通过实际的验证才能获得证明。线上的情况总是会出乎我们的意料。往往考虑很周详的方案落了空；而用户总是在意想不到的地方出招。俗话说，没吃过猪肉，总见过猪跑吧。但后台的积累需要我们去吃猪肉，而不是仅仅看看猪跑。

机遇也是另一重要的因素，如果用户PCU就一直徘徊在10，20万，那就一直不会有100w在线的经验。在用户数逐步增长的过程中，会出现各种各样的问题，逐个去解决问题的过程，就是经验逐步积累和升华的过程。当然，业务能够发展的到什么程度，这个就需要看大家的选择和运气了。
4、不能忽视运维
大家在写代码的时候，有没有考虑过下面的问题：

l  我写的服务运行得正常吗？怎么样才能知道它是正常的？

l  如果运行的服务器宕机了，服务怎么样才能继续？

l  如果网络不通了，有没有备份的链路？

l  策划如果把配置表填错改怎么办？

l  机器太多，不小心又把对应关系配错。

l  运维的同学把电信的服务器配成了联通的IP，外网玩家投诉卡。

5、 主动精神是唯一的法宝

前面零零碎碎讲着这么多，其实最终还是要落到一点上：主动。

